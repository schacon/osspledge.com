---
interface Props {
  grouped: boolean;
}

const { grouped } = Astro.props;

import LeaderboardMember from "./LeaderboardMember.astro";
import {
  getMembers, formatDevGroupBounds, filterInactiveMembers, groupMembers, sortMembers, DEV_GROUP_BOUNDS
} from '../members.ts';

const members = await getMembers();
---

{grouped ? <div>
  {groupMembers(filterInactiveMembers(members)).map((groupMembers, idx) => groupMembers.length > 0 && <div>
    <h2>{formatDevGroupBounds(DEV_GROUP_BOUNDS[idx])}</h2>
    <table class="table--lr">
      <tr>
        <th>Name</th>
        <th>$/dev in latest report</th>
      </tr>
      {sortMembers(groupMembers).map((member) => <tr>
        <LeaderboardMember member={member}></LeaderboardMember>
      </tr>)}
    </table>
  </div>)}
</div> : (
  <table class="table--lr">
    <tr>
      <th>Name</th>
      <th>$/dev in latest report</th>
    </tr>
    {sortMembers(filterInactiveMembers(members)).map((member) => <tr>
      <LeaderboardMember member={member}></LeaderboardMember>
    </tr>)}
  </table>
)}

<style>
  h2 {
    margin-top: 2rem;
    padding: 0.2rem 0.5rem;
    background: var(--color-light-bg);
    font-size: 1rem;
    font-weight: normal;
  }
  th {
    font-weight: normal;
  }
</style>

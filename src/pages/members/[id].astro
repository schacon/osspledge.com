---
import {
  getMembers, getReportFullTotal, getDollarsPerDev, fmtCurrency
} from '../../members.ts';
import type { Member } from "../../content/config.ts";
import Layout from "../../layouts/Layout.astro";

interface Props {
  member: Member;
}

const { member } = Astro.props;

export async function getStaticPaths() {
  const memberItems = await getMembers();
  return memberItems.map(({ id, data }: { id: string, data: Member }) => {
    return { params: { id }, props: { member: data } };
  });
}
---

<Layout title={member.name}>
  <div>
    <img src={member.urlSquareLogoWithBackground}>
    <h2>
      {member.name}
      <small>Open Source Pledge Member</small>
    </h2>
  </div>

  <p>{member.description}</p>

  <a href={member.urlLearnMore}>Learn more â†’</a>

  {member.annualReports.map(report => <div class="annual-report">
    <div>
      <h3><a href={report.url}>Year Ending {report.dateYearEnding}</a></h3>
      <strong>{fmtCurrency(getDollarsPerDev(report))} / dev</strong>
    </div>

    <table>
      <tr>
        <th>Item</th>
        <th>Amount ($)</th>
      </tr>
      <tr>
        <td>Payments to Projects</td>
        <td>{fmtCurrency(report.payments)}</td>
      </tr>
      <tr>
        <td></td>
        <t>= {fmtCurrency(getDollarsPerDev(report))} / dev</td>
      </tr>
      <tr>
        <td>Value of Time</td>
        <td>{fmtCurrency(report.monetaryValueOfTime)}</td>
      </tr>
      <tr>
        <td>Value of Materials</td>
        <td>{fmtCurrency(report.monetaryValueOfMaterials)}</td>
      </tr>
      <tr>
        <td>Total</td>
        <td>{fmtCurrency(getReportFullTotal(report))}</td>
      </tr>
    </table>
  </div>)}

  <small>
    This information is provided directly by {member.name}. Open
    Source Pledge does not carry out any in-depth validation of this data.
  </small>
</Layout>

<style>
</style>
